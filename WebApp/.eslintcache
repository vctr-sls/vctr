[{"E:\\dev\\vctr\\WebApp\\src\\index.tsx":"1","E:\\dev\\vctr\\WebApp\\src\\App.tsx":"2","E:\\dev\\vctr\\WebApp\\src\\services\\state\\state.ts":"3","E:\\dev\\vctr\\WebApp\\src\\services\\api\\api.ts":"4","E:\\dev\\vctr\\WebApp\\src\\components\\sidebar\\Sidebar.tsx":"5","E:\\dev\\vctr\\WebApp\\src\\routes\\login\\Login.tsx":"6","E:\\dev\\vctr\\WebApp\\src\\services\\api\\models.ts":"7","E:\\dev\\vctr\\WebApp\\src\\routes\\links\\Links.tsx":"8","E:\\dev\\vctr\\WebApp\\src\\components\\link-tile\\LinkTile.tsx":"9","E:\\dev\\vctr\\WebApp\\src\\util\\urls.ts":"10","E:\\dev\\vctr\\WebApp\\src\\util\\time.ts":"11","E:\\dev\\vctr\\WebApp\\src\\components\\modal\\Modal.tsx":"12","E:\\dev\\vctr\\WebApp\\src\\components\\tile-skeleton\\TileSkeleton.tsx":"13","E:\\dev\\vctr\\WebApp\\src\\util\\elements.ts":"14","E:\\dev\\vctr\\WebApp\\src\\components\\search-bar\\SearchBar.tsx":"15"},{"size":237,"mtime":1608822761239,"results":"16","hashOfConfig":"17"},{"size":2716,"mtime":1609066765940,"results":"18","hashOfConfig":"17"},{"size":425,"mtime":1609065648422,"results":"19","hashOfConfig":"17"},{"size":4593,"mtime":1608910688931,"results":"20","hashOfConfig":"17"},{"size":1316,"mtime":1609064768672,"results":"21","hashOfConfig":"17"},{"size":2266,"mtime":1609065648336,"results":"22","hashOfConfig":"17"},{"size":1120,"mtime":1608546500889,"results":"23","hashOfConfig":"17"},{"size":2433,"mtime":1609116010808,"results":"24","hashOfConfig":"17"},{"size":2100,"mtime":1609083077980,"results":"25","hashOfConfig":"17"},{"size":177,"mtime":1609067567804,"results":"26","hashOfConfig":"17"},{"size":124,"mtime":1609067919898,"results":"27","hashOfConfig":"17"},{"size":1031,"mtime":1609084951065,"results":"28","hashOfConfig":"17"},{"size":746,"mtime":1609094663291,"results":"29","hashOfConfig":"17"},{"size":313,"mtime":1609095027778,"results":"30","hashOfConfig":"17"},{"size":732,"mtime":1609115999083,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"qs78im",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\dev\\vctr\\WebApp\\src\\index.tsx",[],["65","66"],"E:\\dev\\vctr\\WebApp\\src\\App.tsx",["67"],"/** @format */\n\nimport './App.scss';\n\nimport _, { Component } from 'react';\nimport APIService from './services/api/api';\nimport StateService from './services/state/state';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Sidebar, { SidebarEntry } from './components/sidebar/Sidebar';\nimport Login from './routes/login/Login';\nimport { Permissions } from './services/api/models';\nimport Links from './routes/links/Links';\n\nexport default class App extends Component {\n  private stateService = new StateService();\n\n  state = {\n    loggedIn: false,\n    redirect: (null as any) as string,\n  };\n\n  async componentDidMount() {\n    APIService.events.on('authentication-error', () => {\n      this.redirect('/login');\n    });\n\n    this.stateService.events.on('update', () => this.setState({}));\n\n    if (this.stateService.selfUser === null) {\n      try {\n        const me = await APIService.getUser('me');\n        this.stateService.selfUser = me;\n        this.setState({ loggedIn: true });\n      } catch {}\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app-container\">\n        {this.isLoggedIn && (\n          <Sidebar\n            entries={this.sidebarEntries}\n            onActivate={(r) => this.onSidebarActivate(r)}\n          />\n        )}\n        <div className=\"app-router-outlet\">\n          <Router>\n            <Route\n              exact\n              path=\"/login\"\n              render={() => <Login state={this.stateService} />}\n            ></Route>\n            <Route exact path=\"/links\" render={() => <Links />}></Route>\n\n            <Route exact path=\"/\" render={() => <Redirect to=\"/links\" />} />\n\n            {this.state.redirect && <Redirect to={this.state.redirect} />}\n          </Router>\n        </div>\n      </div>\n    );\n  }\n\n  private async onSidebarActivate(r: string) {\n    if (r === 'logout') {\n      try {\n        await APIService.authLogout();\n        this.stateService.selfUser = null as any;\n        this.setState({ loggedIn: false });\n        r = 'login';\n      } catch (err) {\n        console.error(err);\n        return;\n      }\n    }\n    this.redirect(r);\n  }\n\n  private redirect(to: string) {\n    this.setState({ redirect: to }, () => this.setState({ redirect: null }));\n  }\n\n  private get isLoggedIn(): boolean {\n    return !!this.stateService.selfUser || this.state.loggedIn;\n  }\n\n  private get sidebarEntries(): SidebarEntry[] {\n    const entries: SidebarEntry[] = [\n      {\n        displayname: 'links',\n        route: 'links',\n      },\n    ];\n\n    if (this.stateService.selfUser?.permissions & Permissions.UPDATE_USERS) {\n      entries.push({\n        displayname: 'users',\n        route: 'users',\n      });\n    }\n\n    return entries;\n  }\n}\n","E:\\dev\\vctr\\WebApp\\src\\services\\state\\state.ts",[],"E:\\dev\\vctr\\WebApp\\src\\services\\api\\api.ts",[],"E:\\dev\\vctr\\WebApp\\src\\components\\sidebar\\Sidebar.tsx",["68"],"/** @format */\r\n\r\nimport './Sidebar.scss';\r\n\r\nimport _, { Component } from 'react';\r\nimport { ReactComponent as LogoLarge } from '../../assets/logo-large.svg';\r\n\r\ninterface SidebarProps {\r\n  onActivate: (r: string) => void;\r\n  entries: SidebarEntry[];\r\n}\r\n\r\nexport interface SidebarEntry {\r\n  displayname: string;\r\n  route: string;\r\n}\r\n\r\nexport default class Sidebar extends Component<SidebarProps> {\r\n  render() {\r\n    const sidebarTiles = this.props.entries.map((e) => this.sidebarTile(e));\r\n    sidebarTiles.push(\r\n      <div\r\n        key={`sbtile-logout`}\r\n        className=\"sidebar-tile logout\"\r\n        onClick={() => this.props.onActivate.call(this, 'logout')}\r\n      >\r\n        logout\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"sidebar-container\">\r\n        <div className=\"flex\">\r\n          <LogoLarge className=\"sidebar-logo\" />\r\n        </div>\r\n        {sidebarTiles}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private sidebarTile(e: SidebarEntry): JSX.Element {\r\n    const isActive = window.location.pathname.substr(1).startsWith(e.route);\r\n    return (\r\n      <div\r\n        key={`sbtile-${e.route}`}\r\n        className={`sidebar-tile ${isActive ? 'active' : ''}`}\r\n        onClick={() => this.props.onActivate.call(this, e.route)}\r\n      >\r\n        {e.displayname}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","E:\\dev\\vctr\\WebApp\\src\\routes\\login\\Login.tsx",[],"E:\\dev\\vctr\\WebApp\\src\\services\\api\\models.ts",[],"E:\\dev\\vctr\\WebApp\\src\\routes\\links\\Links.tsx",[],"E:\\dev\\vctr\\WebApp\\src\\components\\link-tile\\LinkTile.tsx",[],"E:\\dev\\vctr\\WebApp\\src\\util\\urls.ts",[],"E:\\dev\\vctr\\WebApp\\src\\util\\time.ts",[],"E:\\dev\\vctr\\WebApp\\src\\components\\modal\\Modal.tsx",[],"E:\\dev\\vctr\\WebApp\\src\\components\\tile-skeleton\\TileSkeleton.tsx",[],"E:\\dev\\vctr\\WebApp\\src\\util\\elements.ts",[],"E:\\dev\\vctr\\WebApp\\src\\components\\search-bar\\SearchBar.tsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":9},{"ruleId":"73","severity":1,"message":"74","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":9},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"@typescript-eslint/no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]