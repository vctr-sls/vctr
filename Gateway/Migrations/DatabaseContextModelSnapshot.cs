// <auto-generated />
using System;
using DatabaseAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Gateway.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("DatabaseAccessLayer.Models.AccessModel", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("LinkGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("SourceIPHash")
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("LinkGuid");

                    b.ToTable("Accesses");
                });

            modelBuilder.Entity("DatabaseAccessLayer.Models.ApiKeyModel", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("KeyHash")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastAccess")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("UserGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Guid");

                    b.HasIndex("UserGuid");

                    b.ToTable("ApiKeys");
                });

            modelBuilder.Entity("DatabaseAccessLayer.Models.LinkModel", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatorGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Destination")
                        .HasMaxLength(10240)
                        .HasColumnType("character varying(10240)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Ident")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("LastAccess")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<bool>("PermanentRedirect")
                        .HasColumnType("boolean");

                    b.Property<int>("TotalAccessLimit")
                        .HasColumnType("integer");

                    b.Property<int>("UniqueAccessCount")
                        .HasColumnType("integer");

                    b.HasKey("Guid");

                    b.HasIndex("CreatorGuid");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("DatabaseAccessLayer.Models.UserModel", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MailAddress")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<int>("Permissions")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Guid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DatabaseAccessLayer.Models.AccessModel", b =>
                {
                    b.HasOne("DatabaseAccessLayer.Models.LinkModel", "Link")
                        .WithMany()
                        .HasForeignKey("LinkGuid");

                    b.Navigation("Link");
                });

            modelBuilder.Entity("DatabaseAccessLayer.Models.ApiKeyModel", b =>
                {
                    b.HasOne("DatabaseAccessLayer.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserGuid");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DatabaseAccessLayer.Models.LinkModel", b =>
                {
                    b.HasOne("DatabaseAccessLayer.Models.UserModel", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorGuid");

                    b.Navigation("Creator");
                });
#pragma warning restore 612, 618
        }
    }
}
